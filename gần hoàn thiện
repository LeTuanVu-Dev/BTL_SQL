
/* a. Tạo database*/
CREATE DATABASE BTL_SQLSever_QUANLYDETAIGIAOVIEN
ON (
	 NAME = 'BTL_SQLSever_QUANLYDETAIGIAOVIEN',
	 FILENAME = 'D:\SQL\zBTL\BAI TAP LON\BTL_SQLSever_QUANLYDETAIGIAOVIEN.mdf',
	 MAXSIZE = UNLIMITED
)
GO

USE BTL_SQLSever_QUANLYDETAIGIAOVIEN
GO

-- 2. Tạo bảng & Khóa chính
-- Tạo Bảng Khoa
CREATE TABLE KHOA
(
	sMaKH VARCHAR(10) NOT NULL,
	sTenKH NVARCHAR(50),
	iNamTL INT ,
	sToaNha NVARCHAR(20) ,
	sSDT CHAR (12),
	sTruongKhoa VARCHAR(10) UNIQUE NOT NULL,
	dBDNhiemKy date ,
	dKTNhiemKy date
)	
ALTER TABLE dbo.KHOA ADD CONSTRAINT PK_Khoa PRIMARY KEY(sMaKH)
ALTER TABLE dbo.KHOA ADD CONSTRAINT CK_nhiemky CHECK (YEAR(dBDNhiemKy) < YEAR(dKTNhiemKy))

-- Tạo bảng Bộ môn
CREATE TABLE BOMON
(
	sMaBM VARCHAR(10) NOT NULL,
	sTenBM NVARCHAR(30) NOT NULL,
	sPhong NVARCHAR(10),
	sTruongBM VARCHAR(10) UNIQUE NOT NULL,
	sMaKH VARCHAR(10) ,
	dBDNhiemKy DATE ,
	dKTNhiemKy DATE
	
)
ALTER TABLE dbo.BOMON ADD CONSTRAINT PK_Bomon PRIMARY KEY(sMaBM)
ALTER TABLE dbo.BOMON ADD CONSTRAINT CK_Bomon CHECK (YEAR(dBDNhiemKy) < YEAR(dKTNhiemKy))
------------------------------------------
-- Tạo bảng chủ đề
CREATE TABLE CHUDE
(
	sMaCD VARCHAR(10) NOT NULL,
	sTenCD NVARCHAR(30)
	
)
ALTER TABLE dbo.CHUDE ADD CONSTRAINT PK_Chude PRIMARY KEY(sMaCD)

-- Tạo bảng đề tài
CREATE TABLE DETAI
(
	sMaDT VARCHAR(10) NOT NULL,
	sTenDT NVARCHAR(50) NOT NULL,
	sCapQL NVARCHAR(30),
	fKinhPhi FLOAT,
	sGVCNDT VARCHAR(10),
	sMaCD VARCHAR(10),
)
ALTER TABLE dbo.DETAI ADD CONSTRAINT PK_detai PRIMARY KEY(sMaDT)

-- Tạo bảng công việc
CREATE TABLE CONGVIEC 
(
	sMaDT VARCHAR(10) NOT NULL,
	iSTT INT NOT NULL,
	sTenCV NVARCHAR(30),
	dNgayBD DATE,
	dNgayKT DATE,
	
)
ALTER TABLE dbo.CONGVIEC ADD CONSTRAINT PK_congviec PRIMARY KEY(sMaDT,iSTT)
-- Tạo bảng giáo viên
CREATE TABLE GIAOVIEN
(
	sMaGV VARCHAR(10) NOT NULL,
	sTenGV NVARCHAR(30) NOT NULL,
	dNgaySinh DATE ,
	sDiaChi NVARCHAR(30),
	fLuong FLOAT,
	sGioiTinh NVARCHAR(3) CHECK ( sGioiTinh = N'Nam' OR sGioiTinh = N'Nữ'),
	sChuyenNganh NVARCHAR(30),
	sMaBM VARCHAR(10),
	sSDT CHAR(12)

)
ALTER TABLE dbo.GIAOVIEN ADD CONSTRAINT PK_giaovien PRIMARY KEY(sMaGV)
ALTER TABLE dbo.GIAOVIEN ADD CONSTRAINT CK_GioiTinh CHECK ( sGioiTinh = N'Nam' OR sGioiTinh = N'Nữ')
ALTER TABLE dbo.GIAOVIEN ADD CONSTRAINT CK_tuoiGV CHECK ( YEAR(GETDATE()) - YEAR(dNgaySinh) >=22)


-- Tạo bảng tham gia đề tài
CREATE TABLE THAMGIADETAI
(
	sMaGV VARCHAR(10) NOT NULL,
	sMaDT VARCHAR(10) NOT NULL,
	iSTT INT NOT NULL ,
	sKetQua NVARCHAR(30),
	
)
ALTER TABLE dbo.THAMGIADETAI ADD CONSTRAINT PK_thamgiadetai PRIMARY KEY(sMaGV,sMaDT,iSTT)

-- b. Tạo Khóa ngoại
--      khóa ngoại ở bảng khoa
ALTER TABLE dbo.KHOA 
ADD CONSTRAINT FK_khoa_giaovien 
FOREIGN KEY(sTruongKhoa) REFERENCES dbo.GIAOVIEN(sMaGV)

--      khóa ngoại ở bộ môn
ALTER TABLE dbo.BOMON ADD CONSTRAINT FK_bomon_khoa 
FOREIGN KEY(sMaKH) REFERENCES dbo.KHOA(sMaKH)

ALTER TABLE dbo.BOMON ADD CONSTRAINT FK_bomon_giaovien
FOREIGN KEY(sTruongBM) REFERENCES dbo.GIAOVIEN(sMaGV)

--      Khóa ngoại ở giáo viên
ALTER TABLE dbo.GIAOVIEN 
ADD CONSTRAINT FK_giaovien_bomon 
FOREIGN KEY(sMaBM) REFERENCES dbo.BOMON(sMaBM)

--      Khóa ngoại ở bảng đề tài
ALTER TABLE dbo.DETAI 
ADD CONSTRAINT FK_detai_chude 
FOREIGN KEY(sMaCD) REFERENCES dbo.CHUDE(sMaCD)


ALTER TABLE DETAI 
ADD CONSTRAINT FK_detai_giao 
FOREIGN KEY (sGVCNDT)REFERENCES GIAOVIEN (sMaGV)

--      Khóa ngoại ở bảng Công việc
ALTER TABLE dbo.CONGVIEC 
ADD CONSTRAINT FK_congviec_detai 
FOREIGN KEY(sMaDT) REFERENCES dbo.DETAI(sMaDT)

--      Khóa ngoại ở bảng tham gia đề tài
ALTER TABLE dbo.THAMGIADETAI 
ADD CONSTRAINT FK_thamgiaDT_giaovien 
FOREIGN KEY(sMaGV) REFERENCES dbo.GIAOVIEN(sMaGV)

ALTER TABLE dbo.THAMGIADETAI
add CONSTRAINT FK_thamgiaDT_detai 
FOREIGN KEY(sMaDT,iSTT) REFERENCES dbo.CONGVIEC(sMaDT,iSTT)

-- Thêm dữ liệu
 /*Thêm dữ liệu bảng chủ đề */
 INSERT INTO dbo.CHUDE ( sMaCD,  sTenCD)
 VALUES  ('CD01',  N'Quản lý giáo dục')
 INSERT INTO dbo.CHUDE ( sMaCD,  sTenCD)
 VALUES  ('CD02',  N'Ứng dụng & Công nghệ')
 INSERT INTO dbo.CHUDE ( sMaCD,  sTenCD)
 VALUES  ('CD03',  N'Nghiên cứu khoa học môi trường')
 SELECT * FROM dbo.CHUDE

 /* Nhập dữ liệu cho bảng giáo viên */
 INSERT INTO dbo.GIAOVIEN (sMaGV, sTenGV,dNgaySinh,sDiaChi, fLuong, sGioiTinh,sChuyenNganh,sSDT)
 VALUES (  'GV01',  N'Trần Văn Dũng',  '19730215', N'Long Biên,Hà Nội', 9500000, N'Nam',N'Công nghệ phần mềm','0329635463' )
 INSERT INTO dbo.GIAOVIEN (sMaGV, sTenGV,dNgaySinh,sDiaChi, fLuong, sGioiTinh,sChuyenNganh,sSDT)
 VALUES (  'GV02',  N'Nguyễn Thùy Linh',  '19770319', N'Thanh Xuân,Hà Nội', 9000000, N'Nữ',N'Truyền Thông Đa PT','0329635159' )
 INSERT INTO dbo.GIAOVIEN (sMaGV, sTenGV,dNgaySinh,sDiaChi, fLuong, sGioiTinh,sChuyenNganh,sSDT)
 VALUES (  'GV03',  N'Dương Chí Bằng',  '19700919', N'Mỹ Đình,Hà Nội', 9000000, N'Nam',N'Truyền Thông Đa PT','0989635111' )
 INSERT INTO dbo.GIAOVIEN (sMaGV, sTenGV,dNgaySinh,sDiaChi, fLuong, sGioiTinh,sChuyenNganh,sSDT)
 VALUES (  'GV04',  N'Trần Hoàng Nam',  '19901105', N'Đống Đa,Hà Nội', 9500000, N'Nam',N'Hệ Thống Thông Tin','0969635321' )
 INSERT INTO dbo.GIAOVIEN (sMaGV, sTenGV,dNgaySinh,sDiaChi, fLuong, sGioiTinh,sChuyenNganh,sSDT)
 VALUES (  'GV05',  N'Trần Thanh Sơn',  '19850503', N'Đông Anh,Hà Nội', 9500000, N'Nam',N'An Toàn Thông Tin','0889963136' )
 INSERT INTO dbo.GIAOVIEN (sMaGV, sTenGV,dNgaySinh,sDiaChi, fLuong, sGioiTinh,sChuyenNganh,sSDT)
 VALUES (  'GV06',  N'Phạm Thanh Nam',  '19600916', N'Thường Tín,Hà Nội', 8500000, N'Nam',N'Kinh Tế Quản Lý','098696314' )
 INSERT INTO dbo.GIAOVIEN (sMaGV, sTenGV,dNgaySinh,sDiaChi, fLuong, sGioiTinh,sChuyenNganh,sSDT)
 VALUES (  'GV07',  N'Lưu Lan Anh',  '19600918', N'Long Biên,Hà Nội', 9000000, N'Nữ',N'Quản Trị Kinh Doanh','0999966663' )
 INSERT INTO dbo.GIAOVIEN (sMaGV, sTenGV,dNgaySinh,sDiaChi, fLuong, sGioiTinh,sChuyenNganh,sSDT)
 VALUES (  'GV08',  N'Nguyễn Thu Thủy',  '19821020', N'Thanh Trì,Hà Nội', 9500000, N'Nữ',N'Thương Mại Điện Tử','012396654' )
 INSERT INTO dbo.GIAOVIEN (sMaGV, sTenGV,dNgaySinh,sDiaChi, fLuong, sGioiTinh,sChuyenNganh,sSDT)
 VALUES (  'GV09',  N'Trần Huyền Trang',  '19770601', N'Hai Bà Trưng,Hà Nội', 9000000, N'Nữ',N'Quản Lý Tài Nguyên MT','0339669696' )
 INSERT INTO dbo.GIAOVIEN (sMaGV, sTenGV,dNgaySinh,sDiaChi, fLuong, sGioiTinh,sChuyenNganh,sSDT)
 VALUES (  'GV10',  N'Nguyễn Thị Tươi',  '19750206', N'Thanh Xuân,Hà Nội', 9000000, N'Nữ',N'Khảo sát môi trường','0969644522' )
 INSERT INTO dbo.GIAOVIEN (sMaGV, sTenGV,dNgaySinh,sDiaChi, fLuong, sGioiTinh,sChuyenNganh,sSDT)
 VALUES (  'GV11',  N'Hoàng Phạm An',  '19931101', N'Long Biên,Hà Nội', 9000000, N'Nam',N'Quản Lý Đất Đai','0963696321' )
 INSERT INTO dbo.GIAOVIEN (sMaGV, sTenGV,dNgaySinh,sDiaChi, fLuong, sGioiTinh,sChuyenNganh,sSDT)
 VALUES (  'GV12',  N'Trần Thị Huế',  '19890209', N'Cầu Giấy,Hà Nội', 8500000, N'Nữ',N'Anh Văn 1','0989696644' )
  INSERT INTO dbo.GIAOVIEN (sMaGV, sTenGV,dNgaySinh,sDiaChi, fLuong, sGioiTinh,sChuyenNganh,sSDT)
 VALUES (  'GV13',  N'Nguyễn Ngâm Trâm',  '19800823', N'Chương Mĩ,Hà Nội', 8500000, N'Nam',N'Anh Văn 2','0972635219' )
  INSERT INTO dbo.GIAOVIEN (sMaGV, sTenGV,dNgaySinh,sDiaChi, fLuong, sGioiTinh,sChuyenNganh,sSDT)
 VALUES (  'GV14',  N'Nguyễn Thị Lan',  '19790609', N'Thanh Xuân,Hà Nội', 8500000, N'Nữ',N'Anh Văn 3' ,'0989635444')
  INSERT INTO dbo.GIAOVIEN (sMaGV, sTenGV,dNgaySinh,sDiaChi, fLuong, sGioiTinh,sChuyenNganh,sSDT)
 VALUES (  'GV15',  N'Hoàng Thanh Toàn',  '19770205', N'Sơn Tây,Hà Nội', 9500000, N'Nam',N'Toán Cao Cấp','0989999999' )

 SELECT * FROM dbo.GIAOVIEN

 /* Nhập dữ liệu cho đề tài*/
 INSERT INTO dbo.DETAI (sMaDT,sTenDT,sCapQL,fKinhPhi,sGVCNDT,sMaCD)
 VALUES(  'DT01',   N'Giáo dục nghề nghiệp hiện nay', N'Trường', 4000000, 'GV12',  N'CD01'  )
 INSERT INTO dbo.DETAI (sMaDT,sTenDT,sCapQL,fKinhPhi,sGVCNDT,sMaCD)
 VALUES(  'DT02',   N'Nghiên cứu yếu tố điểm kém của sinh viên', N'Trường', 5000000, 'GV14',  N'CD01'  )
 INSERT INTO dbo.DETAI (sMaDT,sTenDT,sCapQL,fKinhPhi,sGVCNDT,sMaCD)
 VALUES(  'DT03',   N'NC  phát triển các mô hình GD Stem cho HS THPT', N'Bộ', 6000000, 'GV13',  N'CD01'  )
 INSERT INTO dbo.DETAI (sMaDT,sTenDT,sCapQL,fKinhPhi,sGVCNDT,sMaCD)
 VALUES(  'DT04',   N'Nghiên cứu, thiết kế và chế tạo robot và IOT', N'Trường', 4000000, 'GV03',  N'CD02'  )
 INSERT INTO dbo.DETAI (sMaDT,sTenDT,sCapQL,fKinhPhi,sGVCNDT,sMaCD)
 VALUES(  'DT05',   N'Ứng dung Caso Sức khỏe người già', N'Trường', 5500000, 'GV01',  N'CD02'  )
 INSERT INTO dbo.DETAI (sMaDT,sTenDT,sCapQL,fKinhPhi,sGVCNDT,sMaCD)
 VALUES(  'DT06',   N'Nghiên cứu ứng dụng công nghệ Blockchain', N'Nhà nước', 8000000, 'GV05',  N'CD02'  )
 INSERT INTO dbo.DETAI (sMaDT,sTenDT,sCapQL,fKinhPhi,sGVCNDT,sMaCD)
 VALUES(  'DT07',   N'NC và TH các biện pháp chống xâm nhập mặn', N'Nhà nước', 6000000, 'GV09',  N'CD03'  )
 INSERT INTO dbo.DETAI (sMaDT,sTenDT,sCapQL,fKinhPhi,sGVCNDT,sMaCD)
 VALUES(  'DT08',   N'NC, ĐG tình trạng nước thải tại khu vực thị xã', N'Nhà nước', 6000000, 'GV10',  N'CD03'  )
  INSERT INTO dbo.DETAI (sMaDT,sTenDT,sCapQL,fKinhPhi,sGVCNDT,sMaCD)
 VALUES(  'DT09',   N'NCMH tiết kiệm năng lượng & năng lượng sạch', N'Nhà nước', 8000000, 'GV11',  N'CD03'  )

 /*Nhập dữ liệu cho bảng công viêc */

 INSERT INTO dbo.CONGVIEC ( sMaDT, iSTT, sTenCV, dNgayBD, dNgayKT)
 VALUES (   'DT02', 1, N'Khảo sát thưc nghiệm','20190410', '20190415' )
  INSERT INTO dbo.CONGVIEC ( sMaDT, iSTT, sTenCV, dNgayBD, dNgayKT)
 VALUES (   'DT02', 2, N'Xác định nguyên nhân','20190420', '20190428' )
  INSERT INTO dbo.CONGVIEC ( sMaDT, iSTT, sTenCV, dNgayBD, dNgayKT)
 VALUES (   'DT02', 3, N'NC tâm lý sinh viên','20190502', '20190510' )
  INSERT INTO dbo.CONGVIEC ( sMaDT, iSTT, sTenCV, dNgayBD, dNgayKT)
 VALUES (   'DT02', 4, N'Đề xuất phương án','20190520', '20190602' )


 INSERT INTO dbo.CONGVIEC ( sMaDT, iSTT, sTenCV, dNgayBD, dNgayKT)
 VALUES (   'DT05', 1, N'Khởi tạo lập kế hoạch','20180904', '20180914' )
  INSERT INTO dbo.CONGVIEC ( sMaDT, iSTT, sTenCV, dNgayBD, dNgayKT)
 VALUES (   'DT05', 2, N'Xác định yêu cầu','20180915', '20180920' )
  INSERT INTO dbo.CONGVIEC ( sMaDT, iSTT, sTenCV, dNgayBD, dNgayKT)
 VALUES (   'DT05', 3, N'Phân tích hệ thống','20180921', '20181001' )
  INSERT INTO dbo.CONGVIEC ( sMaDT, iSTT, sTenCV, dNgayBD, dNgayKT)
 VALUES (   'DT05', 4, N'Thiết kế hệ thống','20181005', '20181205' )
  INSERT INTO dbo.CONGVIEC ( sMaDT, iSTT, sTenCV, dNgayBD, dNgayKT)
 VALUES (   'DT05', 5, N'cài đặt kiểm thử','20181206', '20181228' )

 INSERT INTO dbo.CONGVIEC ( sMaDT, iSTT, sTenCV, dNgayBD, dNgayKT)
 VALUES (   'DT07', 1, N'Khảo sát thưc nghiệm','20200410', '20200415' )
  INSERT INTO dbo.CONGVIEC ( sMaDT, iSTT, sTenCV, dNgayBD, dNgayKT)
 VALUES (   'DT07', 2, N'Thu nhập mẫu ô nhiễm','20200420', '20200428' )
  INSERT INTO dbo.CONGVIEC ( sMaDT, iSTT, sTenCV, dNgayBD, dNgayKT)
 VALUES (   'DT07', 3, N'Xd múc độ ảnh hưởng','20200502', '20200510' )
  INSERT INTO dbo.CONGVIEC ( sMaDT, iSTT, sTenCV, dNgayBD, dNgayKT)
 VALUES (   'DT07', 4, N'phương án giải quyết','20200520', '20200602' )
 INSERT INTO dbo.CONGVIEC ( sMaDT, iSTT, sTenCV, dNgayBD, dNgayKT)
 VALUES (   'DT07', 5, N'Nghiệm thu','20200603', '20200903' )
  
 SELECT * FROM dbo.CONGVIEC

 /* Nhập dữ liệu cho bảng Tham gia đề tài */
 INSERT INTO dbo.THAMGIADETAI ( sMaGV,sMaDT, iSTT, sKetQua)
 VALUES (   'GV12',   'DT02',   1,   N'Đạt' )
 INSERT INTO dbo.THAMGIADETAI ( sMaGV,sMaDT, iSTT, sKetQua)
 VALUES (   'GV12',   'DT02',   2,   N'Đạt' )
 INSERT INTO dbo.THAMGIADETAI ( sMaGV,sMaDT, iSTT, sKetQua)
 VALUES (   'GV13',   'DT02',   3,   N'Đạt' )
 INSERT INTO dbo.THAMGIADETAI ( sMaGV,sMaDT, iSTT, sKetQua)
 VALUES (   'GV14',   'DT02',   4,   N'Đạt' )

 INSERT INTO dbo.THAMGIADETAI ( sMaGV,sMaDT, iSTT, sKetQua)
 VALUES (   'GV01',   'DT05',   1,   N'Đạt' )
 INSERT INTO dbo.THAMGIADETAI ( sMaGV,sMaDT, iSTT, sKetQua)
 VALUES (   'GV02',   'DT05',   2,   N'Đạt' )
 INSERT INTO dbo.THAMGIADETAI ( sMaGV,sMaDT, iSTT, sKetQua)
 VALUES (   'GV03',   'DT05',   3,   N'Đạt' )
 INSERT INTO dbo.THAMGIADETAI ( sMaGV,sMaDT, iSTT, sKetQua)
 VALUES (   'GV03',   'DT05',   4,   N'Đạt' )
  INSERT INTO dbo.THAMGIADETAI ( sMaGV,sMaDT, iSTT, sKetQua)
 VALUES (   'GV04',   'DT05',   5,   N'Đạt' )

 INSERT INTO dbo.THAMGIADETAI ( sMaGV,sMaDT, iSTT, sKetQua)
 VALUES (   'GV09',   'DT07',   1,   N'Đạt' )
 INSERT INTO dbo.THAMGIADETAI ( sMaGV,sMaDT, iSTT, sKetQua)
 VALUES (   'GV10',   'DT07',   2,   N'Đạt' )
 INSERT INTO dbo.THAMGIADETAI ( sMaGV,sMaDT, iSTT, sKetQua)
 VALUES (   'GV10',   'DT07',   3,   N'Đạt' )
 INSERT INTO dbo.THAMGIADETAI ( sMaGV,sMaDT, iSTT, sKetQua)
 VALUES (   'GV10',   'DT07',   4,   N'Đạt' )
  INSERT INTO dbo.THAMGIADETAI ( sMaGV,sMaDT, iSTT, sKetQua)
 VALUES (   'GV11',   'DT07',   5,   N'Chưa Đạt' )

 /* Nhập dữ liệu cho bảng khoa */
 INSERT INTO dbo.KHOA ( sMaKH, sTenKH, iNamTL,sToaNha,sSDT,sTruongKhoa, dBDNhiemKy,dKTNhiemKy)
 VALUES (   'KH01',N'Công Nghệ Thông Tin',1993, N'A1','0923647509', 'GV01','20180206', '20230609'   )
  INSERT INTO dbo.KHOA ( sMaKH, sTenKH, iNamTL,sToaNha,sSDT,sTruongKhoa, dBDNhiemKy,dKTNhiemKy)
 VALUES (   'KH02',N'Kinh Tế',1977, N'C2','0384857839', 'GV08','20200203', '20250203'   )
  INSERT INTO dbo.KHOA ( sMaKH, sTenKH, iNamTL,sToaNha,sSDT,sTruongKhoa, dBDNhiemKy,dKTNhiemKy)
 VALUES (   'KH03',N'QL Tài Nguyên & Môi Trường',1975, N'B3','0983746685', 'GV09','20170606', '20220606'   )
  INSERT INTO dbo.KHOA ( sMaKH, sTenKH, iNamTL,sToaNha,sSDT,sTruongKhoa, dBDNhiemKy,dKTNhiemKy)
 VALUES (   'KH04',N'Ngôn Ngữ Anh',1993, N'D4','0388477679', 'GV14','20211021', '20261021'   )


 SELECT * FROM dbo.GIAOVIEN

  /* Nhập dữ liệu cho bảng Bộ môn */
 INSERT INTO dbo.BOMON (sMaBM,sTenBM, sPhong, sTruongBM,sMaKH,dBDNhiemKy,dKTNhiemKy)
 VALUES( 'BM01',  N'Đa Phương Tiện', N'A31', 'GV02', 'KH01','20180903', '20231001' )
 INSERT INTO dbo.BOMON (sMaBM,sTenBM, sPhong, sTruongBM,sMaKH,dBDNhiemKy,dKTNhiemKy)
 VALUES( 'BM02',  N'Phần Mền', N'A51', 'GV01', 'KH01','20210806', '20260505')
 INSERT INTO dbo.BOMON (sMaBM,sTenBM, sPhong, sTruongBM,sMaKH,dBDNhiemKy,dKTNhiemKy)
 VALUES( 'BM03',  N'HTTT', N'A41', 'GV04', 'KH01','20201102', '20251201' )

 INSERT INTO dbo.BOMON (sMaBM,sTenBM, sPhong, sTruongBM,sMaKH,dBDNhiemKy,dKTNhiemKy)
 VALUES( 'BM04',  N'Kinh tế quản trị', N'C25', 'GV06', 'KH02','20200906', '20261001' )
 INSERT INTO dbo.BOMON (sMaBM,sTenBM, sPhong, sTruongBM,sMaKH,dBDNhiemKy,dKTNhiemKy)
 VALUES( 'BM05',  N'Kinh tế vĩ mô', N'C12', 'GV08', 'KH02','20181001', '20231001' )
 INSERT INTO dbo.BOMON (sMaBM,sTenBM, sPhong, sTruongBM,sMaKH,dBDNhiemKy,dKTNhiemKy)
 VALUES( 'BM06',  N'Kinh tế quốc dân', N'C21', 'GV07', 'KH02','20211101', '20261001' )

 INSERT INTO dbo.BOMON (sMaBM,sTenBM, sPhong, sTruongBM,sMaKH,dBDNhiemKy,dKTNhiemKy)
 VALUES( 'BM07',  N'Thống kế Môi Trường', N'B52', 'GV10', 'KH03','20201001', '20261001' )
 INSERT INTO dbo.BOMON (sMaBM,sTenBM, sPhong, sTruongBM,sMaKH,dBDNhiemKy,dKTNhiemKy)
 VALUES( 'BM08',  N'Quản lý Môi Trường', N'B12', 'GV11', 'KH03','20180303', '20230303' )

 INSERT INTO dbo.BOMON (sMaBM,sTenBM, sPhong, sTruongBM,sMaKH,dBDNhiemKy,dKTNhiemKy)
 VALUES( 'BM09',  N'Anh cơ bản', N'D21', 'GV13', 'KH04','20201207', '20251207' )
 INSERT INTO dbo.BOMON (sMaBM,sTenBM, sPhong, sTruongBM,sMaKH,dBDNhiemKy,dKTNhiemKy)
 VALUES( 'BM10',  N'Anh chuyên ngành', N'D12', 'GV14', 'KH04','20210712', '20260712' )

 /*Cập nhật dữ liệu bộ môn cho bảng giáo viên */
 SELECT * FROM dbo.GIAOVIEN
 SELECT * FROM dbo.BOMON
 UPDATE dbo.GIAOVIEN SET sMaBM = 'BM02' WHERE sMaGV = 'GV01'
 UPDATE dbo.GIAOVIEN SET sMaBM = 'BM01' WHERE sMaGV = 'GV02'
 UPDATE dbo.GIAOVIEN SET sMaBM = 'BM01' WHERE sMaGV = 'GV03'
 UPDATE dbo.GIAOVIEN SET sMaBM = 'BM03' WHERE sMaGV = 'GV04'
 UPDATE dbo.GIAOVIEN SET sMaBM = 'BM03' WHERE sMaGV = 'GV05'
 UPDATE dbo.GIAOVIEN SET sMaBM = 'BM04' WHERE sMaGV = 'GV06'
 UPDATE dbo.GIAOVIEN SET sMaBM = 'BM05' WHERE sMaGV = 'GV07'
 UPDATE dbo.GIAOVIEN SET sMaBM = 'BM04' WHERE sMaGV = 'GV08'
 UPDATE dbo.GIAOVIEN SET sMaBM = 'BM07' WHERE sMaGV = 'GV09'
 UPDATE dbo.GIAOVIEN SET sMaBM = 'BM08' WHERE sMaGV = 'GV10'
 UPDATE dbo.GIAOVIEN SET sMaBM = 'BM08' WHERE sMaGV = 'GV11'
 UPDATE dbo.GIAOVIEN SET sMaBM = 'BM09' WHERE sMaGV = 'GV12'
 UPDATE dbo.GIAOVIEN SET sMaBM = 'BM09' WHERE sMaGV = 'GV13'
 UPDATE dbo.GIAOVIEN SET sMaBM = 'BM10' WHERE sMaGV = 'GV14'

SELECT * FROM dbo.BOMON
SELECT * FROM dbo.KHOA
SELECT * FROM dbo.GIAOVIEN
SELECT * FROM dbo.DETAI
SELECT * FROM dbo.THAMGIADETAI
SELECT * FROM dbo.CONGVIEC
SELECT * FROM dbo.CHUDE



 /* C, Truy vấn lấy dữ liệu từ một bảng (1 bảng: 5 câu) & (nhiều bảng: 5 câu)*/
 -- Câu 1 : Lấy thông tin họ tên giáo viên có giới tính là nữ và lương
 SELECT sTenGV,fLuong FROM dbo.GIAOVIEN 
 WHERE sGioiTinh = N'Nữ'
 GO
 
 -- câu 2: Lấy ra thông tin đề tài có cấp quản lý là nhà nước
 SELECT * FROM dbo.DETAI
 WHERE sCapQL = N'Nhà nước'
 GO
 
 -- Câu 3: Lấy ra thông tin khoa có giáo viên trưởng khoa có nhiệm kỳ >=5 năm
 SELECT * FROM dbo.KHOA
 WHERE YEAR(dKTNhiemKy) - YEAR(dBDNhiemKy) >=4

 -- Câu 4: Lấy ra thông tin giáo viên có tuổi >55 tuổi là nam
 SELECT * FROM dbo.GIAOVIEN
 WHERE sGioiTinh = N'Nam' 
 AND YEAR(GETDATE()) - YEAR(dNgaySinh) >=55

 -- Câu 5: Đếm số bộ môn có trong bảng bộ môn
 SELECT COUNT(sMaBM) AS [Tổng số bộ môn] FROM dbo.BOMON

 -- Câu 6 : Cho biết tên những giáo viên thuộc khoa công nghệ thông tin
 SELECT sTenGV FROM dbo.GIAOVIEN 
 JOIN dbo.BOMON
 ON BOMON.sMaBM = GIAOVIEN.sMaBM
 JOIN dbo.KHOA
 ON KHOA.sMaKH = BOMON.sMaKH
 WHERE sTenKH = N'Công Nghệ Thông Tin'
 
 -- Câu 7 : Cho biết tên đề tài và giáo viên đang chủ nhiệm đề tài đó
 SELECT sTenGV,sTenDT FROM dbo.DETAI
 JOIN dbo.GIAOVIEN
 ON GIAOVIEN.sMaGV = DETAI.sGVCNDT
  
 -- Câu 8 : Cho biết thông tin trưởng khoa của các khoa
 SELECT sTenGV,sGioiTinh,dNgaySinh,fLuong,dBDNhiemKy,dKTNhiemKy,sTenKH AS [Trưởng khoa] FROM dbo.KHOA
 JOIN dbo.GIAOVIEN
 ON GIAOVIEN.sMaGV = KHOA.sTruongKhoa

 -- Câu 9 : chọn ra những giáo viên tham gia đề tài : caso người già
 SELECT sTenGV,cv.sTenCV,cv.iSTT AS [Thứ tự làm việc] FROM dbo.THAMGIADETAI AS Tg
 JOIN dbo.CONGVIEC AS cv
 ON cv.sMaDT = Tg.sMaDT AND cv.iSTT = Tg.iSTT
 JOIN dbo.GIAOVIEN
 ON GIAOVIEN.sMaGV = Tg.sMaGV
 JOIN dbo.DETAI AS dt
 ON dt.sMaDT = cv.sMaDT
 WHERE dt.sTenDT like N'%Caso%' 

 -- Câu 10: Cho biết tên những giáo viên vừa là trưởng khoa và vừa là trưởng bộ môn.
 SELECT sTenGV,sTenBM,sTenKH FROM dbo.GIAOVIEN,dbo.BOMON,dbo.KHOA
 WHERE sMaGV = sTruongBM AND sMaGV = sTruongKhoa
 GO
 
 /*Câu D : Tạo 10 view */

 -- Câu 1 : Tạo view Thông tin và thông tin liên lạc giáo viên
 --          và giáo viên đó đang ở khoa nào
CREATE VIEW view_TTgiaovien
 AS
 SELECT sTenGV,sGioiTinh,fLuong,GIAOVIEN.sSDT,KHOA.sMaKH,sTenKH AS [KHOA] 
 FROM dbo.GIAOVIEN 
 JOIN dbo.BOMON
 ON BOMON.sMaBM = GIAOVIEN.sMaBM
 JOIN dbo.KHOA
 ON KHOA.sMaKH = BOMON.sMaKH
 GO
 
 SELECT * FROM view_TTgiaovien
 GO
 -- Câu 2 : Tạo view tổng lương của mỗi khoa
 CREATE VIEW view_TongtienLuongKhoa
 as
 SELECT KHOA.sTenKH,SUM(fLuong) AS [Tổng tiền lương] FROM dbo.KHOA  
 JOIN dbo.view_TTgiaovien
ON view_TTgiaovien.sMaKH = KHOA.sMaKH
GROUP BY sTenKH
GO
 SELECT * FROM dbo.view_TongtienLuongKhoa
 GO
 
 -- Câu 3: Tạo view  tên đề tài đã thực hiện và công việc các giáo viên tham gia có kết quả đạt
 CREATE VIEW view_DTketQuaDat
 as
 SELECT sTenDT,GIAOVIEN.sMaGV,sTenGV,THAMGIADETAI.iSTT AS [Thứ tự công việc],sTenCV,sKetQua FROM dbo.DETAI 
 JOIN dbo.CONGVIEC
 ON CONGVIEC.sMaDT = DETAI.sMaDT
 JOIN dbo.THAMGIADETAI
 ON THAMGIADETAI.sMaDT = CONGVIEC.sMaDT AND THAMGIADETAI.iSTT = CONGVIEC.iSTT
 JOIN dbo.GIAOVIEN
 ON GIAOVIEN.sMaGV = THAMGIADETAI.sMaGV
 WHERE sKetQua = N'Đạt'
 GO

 SELECT * FROM dbo.view_DTketQuaDat
 GO
 

 -- Câu 4: Tạo view biết thông tin giáo viên chưa tham gia đề tài nào
 CREATE VIEW view_GiaovienKhongThamGiaDT
 as
 SELECT sTenGV,dNgaySinh,sDiaChi,sGioiTinh,sChuyenNganh FROM dbo.GIAOVIEN
 WHERE sMaGV NOT IN (
						SELECT sMaGV FROM dbo.view_DTketQuaDat
						)
 GO

 SELECT * FROM dbo.view_GiaovienKhongThamGiaDT
 GO
 
 
 -- Câu 5: Tạo view thông kê số lượng giáo viên và tổng lương của từng bộ môn
 CREATE VIEW view_SoluongTongluongBM
 AS 
 SELECT BOMON.sMaBM,sTenBM,COUNT(sMaGV) AS [Số lượng giáo viên] , SUM(fLuong) AS [Tổng lương bộ môn] 
 FROM dbo.GIAOVIEN
 JOIN dbo.BOMON
 ON BOMON.sMaBM = GIAOVIEN.sMaBM
 GROUP BY BOMON.sMaBM,sTenBM
 GO

 SELECT * FROM dbo.view_SoluongTongluongBM
 GO
 
 -- Câu 6: tạo view tên giáo viên tham gia đề tài năm 2018
 CREATE VIEW view_yearGVthamgia_DT
 AS
 SELECT DISTINCT sTenGV AS [Giáo viên tham gia] FROM dbo.DETAI
 JOIN dbo.CONGVIEC
 ON CONGVIEC.sMaDT = DETAI.sMaDT
 JOIN dbo.THAMGIADETAI
 ON THAMGIADETAI.sMaDT = CONGVIEC.sMaDT AND THAMGIADETAI.iSTT = CONGVIEC.iSTT
 JOIN dbo.GIAOVIEN
 ON GIAOVIEN.sMaGV = THAMGIADETAI.sMaGV
 WHERE YEAR(dNgayBD) = 2018
 GO
 
 SELECT * FROM dbo.view_yearGVthamgia_DT
 GO
 

 -- Câu 7: tạo view họ tên giáo viên đảm nhiệm ít nhất 2 công việc trong 1 đề tài
 CREATE VIEW view_Giaovienthamgia2congviec
 AS
 SELECT sTenGV,sTenDT, COUNT(CONGVIEC.iSTT) AS [Số lượng công việc đảm nhiệm] FROM dbo.GIAOVIEN
 JOIN dbo.THAMGIADETAI
 ON THAMGIADETAI.sMaGV = GIAOVIEN.sMaGV
 JOIN dbo.CONGVIEC
 ON CONGVIEC.sMaDT = THAMGIADETAI.sMaDT AND CONGVIEC.iSTT = THAMGIADETAI.iSTT
 JOIN dbo.DETAI
 ON DETAI.sMaDT = CONGVIEC.sMaDT
 GROUP BY sTenGV,sTenDT
 HAVING COUNT(CONGVIEC.iSTT) >=2
 GO
 
 SELECT * FROM dbo.view_Giaovienthamgia2congviec
 GO
 
 -- câu 8: tạo view Thống kê số lượng giáo viên của từng khoa
CREATE VIEW view_SoluonggiaovienKHoa
 AS
 SELECT KHOA.sMaKH,sTenKH,COUNT(sMaGV) AS [Số lượng giáo viên] FROM dbo.KHOA
 JOIN dbo.BOMON
 ON BOMON.sMaKH = KHOA.sMaKH
 JOIN dbo.GIAOVIEN 
 ON GIAOVIEN.sMaBM = BOMON.sMaBM
 GROUP BY sTenKH,KHOA.sMaKH
 GO

 SELECT * FROM view_SoluonggiaovienKHoa
 GO
 
 -- Câu 9 : tạo view tên giáo viên chủ nhiệm đề tài cấp quản lý nhà nước
 CREATE VIEW VIEW_Truongdetai
 as
 SELECT sTenGV,sTenDT
 FROM dbo.GIAOVIEN,dbo.DETAI
 WHERE dbo.GIAOVIEN.sMaGV=dbo.DETAI.sGVCNDT
 AND sCapQL = N'Nhà nước'
 GO

 SELECT * FROM dbo.VIEW_Truongdetai
 GO
 
 -- Câu 10 : tạo view thống kê số lượng đề tài của chủ đề
 CREATE VIEW view_SoluongdetaiChude
 AS 
 SELECT sTenCD,COUNT(sMaDT) AS[Số lượng đề tài]
 FROM dbo.CHUDE,dbo.DETAI
 WHERE dbo.CHUDE.sMaCD=dbo.DETAI.sMaCD
 GROUP BY dbo.CHUDE.sTenCD
 GO
 
 SELECT * FROM dbo.view_SoluongdetaiChude
 GO
 

-- Câu 11: Tạo view tính tổng tiền theo chủ đề
CREATE VIEW view_TongTienChuDe
AS 
SELECT sTenCD,SUM(fKinhPhi) AS [Tổng tiền] FROM dbo.CHUDE
JOIN dbo.DETAI
ON DETAI.sMaCD = CHUDE.sMaCD
GROUP BY sTenCD
GO

SELECT * FROM dbo.view_TongTienChuDe
GO

-- Câu 12 : tạo view tuổi trung bình và lương trung bình của khoa
CREATE VIEW view_TuoiTBvaLuongTBkhoa
AS
SELECT sTenKH,AVG(fLuong) AS [Trung bình lương] , AVG( YEAR(GETDATE()) - YEAR(dNgaySinh)) AS [Độ tuổi trung bình] FROM dbo.GIAOVIEN
JOIN dbo.BOMON
ON BOMON.sMaBM = GIAOVIEN.sMaBM
JOIN dbo.KHOA
ON KHOA.sMaKH = BOMON.sMaKH
GROUP BY sTenKH
GO
SELECT * FROM dbo.view_TuoiTBvaLuongTBkhoa
GO

-- Câu 13: tạo view: cho biết đề tài đó đang thực hiện bởi giáo viên ở khoa nào
-- MÃ giáo viên sẽ là trung gian
-- Tạo view lấy mã giáo viên và tên khoa
CREATE VIEW TrunggianGV
AS 
SELECT sMaGV,sTenGV,sTenKH FROM dbo.GIAOVIEN
JOIN dbo.BOMON
ON BOMON.sMaBM = GIAOVIEN.sMaBM
JOIN dbo.KHOA
ON KHOA.sMaKH = BOMON.sMaKH
GO

-- Tạo view lấy mã giáo viên ở đề tài và tên đề tài
CREATE VIEW trunggianDeTai
AS
SELECT GIAOVIEN.sMaGV,sTenDT FROM dbo.DETAI
JOIN dbo.CONGVIEC
ON CONGVIEC.sMaDT = DETAI.sMaDT
JOIN dbo.THAMGIADETAI
ON THAMGIADETAI.sMaDT = CONGVIEC.sMaDT AND THAMGIADETAI.iSTT = CONGVIEC.iSTT
JOIN dbo.GIAOVIEN
ON GIAOVIEN.sMaGV = THAMGIADETAI.sMaGV
GO

-- Tạo view tổng quát
CREATE VIEW view_DeTaiThucHienOKhoa
AS 
SELECT DISTINCT sTenDT AS [Tên đề tài],sTenKH AS [KHOA] FROM dbo.TrunggianGV
JOIN dbo.trunggianDeTai
ON trunggianDeTai.sMaGV = TrunggianGV.sMaGV
GO

SELECT * FROM dbo.view_DeTaiThucHienOKhoa
GO

 /* e. Tạo thủ tục hàm Procduce*/
 /*
Tạo các Stored Procedure với các tùy chọn khác nhau: Parameter,
OUTPUT, RETURN (ít nhất 20 thủ tục) để thêm, sửa, xóa, trích lọc dữ
liệu. Gọi thực thi các Stored Procedure đã tạo*
*/
-- 1. PROC: Giáo viên không tham gia đề tài với tham số truyền vào là tên đề tài
CREATE PROC PR_GvKhongThamGiaDT
@tenDT NVARCHAR(50)
AS
BEGIN
	SELECT sTenGV,sGioiTinh,sDiaChi FROM dbo.GIAOVIEN
	WHERE sMaGV NOT IN 
	(
		SELECT sMaGV FROM dbo.DETAI
		JOIN dbo.CONGVIEC
		ON CONGVIEC.sMaDT = DETAI.sMaDT
		JOIN dbo.THAMGIADETAI
		ON THAMGIADETAI.sMaDT = CONGVIEC.sMaDT AND THAMGIADETAI.iSTT = CONGVIEC.iSTT
		WHERE @tenDT = sTenDT
	)
END 
EXECUTE dbo.PR_GvKhongThamGiaDT @tenDT = N'Ứng dung Caso Sức khỏe người già' 
GO

--  PROC 1.2: Giáo viên không tham gia đề tài với tham số truyền vào là Cấp quản lý
CREATE PROC PR_GVKhongthamgiaCapQL
@capQL NVARCHAR(30)
AS
BEGIN
	SELECT sTenGV,sGioiTinh,sDiaChi FROM dbo.GIAOVIEN WHERE sMaGV NOT IN 
	(
		SELECT sMaGV FROM dbo.DETAI
		JOIN dbo.CONGVIEC
		ON CONGVIEC.sMaDT = DETAI.sMaDT
		JOIN dbo.THAMGIADETAI
		ON THAMGIADETAI.sMaDT = CONGVIEC.sMaDT AND THAMGIADETAI.iSTT = CONGVIEC.iSTT
		WHERE @capQL = sCapQL
	)
END
EXECUTE dbo.PR_GVKhongthamgiaCapQL @capQL = N'Nhà nước' 
GO

--  2, PROC: Danh sách tên giáo viên  tham gia đề tài với tham số truyền vào là : 
--    kết quả , Cấp quản lý , năm tham gia đề tài
ALTER PROC PR_GvthamGiaDT
@ketqua NVARCHAR(30) , @capQL NVARCHAR(30), @nam INT 
AS
BEGIN
	SELECT sTenGV FROM dbo.DETAI
	JOIN dbo.CONGVIEC
	ON CONGVIEC.sMaDT = DETAI.sMaDT
	JOIN dbo.THAMGIADETAI
	ON THAMGIADETAI.sMaDT = CONGVIEC.sMaDT AND THAMGIADETAI.iSTT = CONGVIEC.iSTT
	JOIN dbo.GIAOVIEN
	ON GIAOVIEN.sMaGV = THAMGIADETAI.sMaGV
	WHERE @ketqua = sKetQua
	AND @capQL LIKE sCapQL AND @nam = YEAR(dNgayKT)
END

EXECUTE dbo.PR_GvthamGiaDT @ketqua = N'Đạt', 
                           @capQL = N'Trường',  
                           @nam = 2018     
GO

-- 3, PROC: Hiện thông tin giáo viên giáo tham số truyền vào là : tên Bộ môn
CREATE PROC PR_GiaoVienBoMon
@tenBoMon NVARCHAR(30)
AS
BEGIN
	SELECT sTenGV,dNgaySinh,sGioiTinh,fLuong,sChuyenNganh FROM dbo.GIAOVIEN
	JOIN dbo.BOMON
	ON BOMON.sMaBM = GIAOVIEN.sMaBM
	WHERE @tenBoMon = sTenBM
END
EXECUTE dbo.PR_GiaoVienBoMon @tenBoMon = N'HTTT'
GO

-- 4, PROC:  hiện all tên giao viên thuộc chuyên ngành nào với chuyên ngành là tham số truyền vào
CREATE PROC PR_GiaoVienChuyenNganh
@chuyennganh NVARCHAR(100)
AS
BEGIN
SELECT * FROM dbo.GIAOVIEN WHERE sChuyenNganh = @chuyennganh
END

EXEC dbo.PR_GiaoVienChuyenNganh @chuyennganh = N'Công nghệ phần mềm'
GO

-- 5,PROC: thủ tục với output tìm số lượng giáo viên tham gia đề tài với tên đề tài là tham số truyền vào và số lượng giáo viên là output
CREATE PROC PR_TongGVThamgiaDeTai
@Sum INT OUTPUT,
@tenDT NVARCHAR(50)
AS
BEGIN
	SELECT @Sum = COUNT(sMaGV) FROM dbo.GIAOVIEN WHERE sMaGV IN 
	(
		SELECT sMaGV FROM dbo.DETAI 
		JOIN dbo.CONGVIEC
		ON CONGVIEC.sMaDT = DETAI.sMaDT
		JOIN dbo.THAMGIADETAI
		ON THAMGIADETAI.sMaDT = CONGVIEC.sMaDT AND THAMGIADETAI.iSTT = CONGVIEC.iSTT
		WHERE @tenDT = sTenDT  
	)
END
DECLARE @tongGV INT 
EXECUTE dbo.PR_TongGVThamgiaDeTai @Sum = @tongGV OUTPUT,    
                                  @tenDT = N'Ứng dung Caso Sức khỏe người già' 
SELECT @tongGV AS [Tổng giáo viên tham gia đề tài]
GO

--6,PROC: Thêm 1 giáo viên  vào bảng giáo viên
CREATE PROC PR_insertGiaoVien
@maGV VARCHAR(10),@tenGV NVARCHAR(30),@ngaysinh DATE,
@diaChi NVARCHAR(50) , @luong FLOAT , @gioitinh NVARCHAR(3),
@chuyenNganh NVARCHAR(30) , @maBM VARCHAR(10)
AS
BEGIN
	IF EXISTS ( SELECT * FROM dbo.GIAOVIEN WHERE @maGV = sMaGV)
		BEGIN
			PRINT N'Mã Giáo Viên đã tồn tại'
		END
	ELSE
		IF NOT EXISTS 
			(	SELECT * FROM dbo.BOMON
				JOIN dbo.GIAOVIEN
				ON GIAOVIEN.sMaBM = BOMON.sMaBM
				WHERE @maBM = BOMON.sMaBM
			)	
			BEGIN
				PRINT N'Không tìm thấy mã bộ môn hợp lệ'
			END
		ELSE
			INSERT dbo.GIAOVIEN (sMaGV,sTenGV,dNgaySinh,sDiaChi,fLuong,sGioiTinh,sChuyenNganh,sMaBM)
			VALUES (   @maGV, @tenGV, @ngaysinh,@diaChi, @luong,@gioitinh, @chuyenNganh,@maBM )
END
EXECUTE dbo.PR_insertGiaoVien @maGV = 'GV16',              
                              @tenGV = N'Lê Thị Nguyệt',          
                              @ngaysinh = '1989-10-03', 
                              @diaChi = N'Nhổn , Hà Nội', 
                              @luong = 8000000, 
                              @gioitinh = N'Nữ', 
                              @chuyenNganh = N'Anh văn CN',  
                              @maBM = 'BM10' 
GO

-- 7,PROC:  thêm 1 bộ môn có tên là Toán Cao Cấp 
CREATE PROC PR_insertBoMon
@maBM VARCHAR(10),
@tenBM NVARCHAR(30),
@Phong NVARCHAR(10),
@TruongBM VARCHAR(10),
@maKH VARCHAR(10),
@BDNK DATE,
@KTNK DATE
AS 
BEGIN
	IF EXISTS (SELECT * FROM dbo.BOMON WHERE @maBM = sMaBM)
		BEGIN
			PRINT N'Mã Bộ Môn đã tồn tại'
		END
	ELSE
		IF NOT EXISTS ( SELECT * FROM dbo.KHOA WHERE @maKH = sMaKH) 
			BEGIN
				PRINT N'Mã khoa không tồn tại'
			END
		ELSE
			IF NOT EXISTS (SELECT * FROM dbo.GIAOVIEN WHERE @TruongBM = sMaGV)
				BEGIN
					PRINT N'Không có mã giáo viên tồn tại'
				END
			ELSE
				BEGIN
					INSERT INTO dbo.BOMON VALUES ( @maBM, @tenBM,@Phong,@TruongBM,@maKH, @BDNK ,@KTNK )
				END
END

EXECUTE dbo.PR_insertBoMon @maBM = 'BM11',   
                           @tenBM = N'Toán Tin', 
                           @Phong = N'T01', 
                           @TruongBM = 'GV15',
                           @maKH = 'KH01', 
                           @BDNK = '2021-10-03', 
                           @KTNK = '2026-10-03'  
GO
SELECT * FROM dbo.BOMON
GO

-- 8, PROC: update trong bảng GV những ai dạy toán thì đổi mã bộ môn = BM11
CREATE PROC PR_updateGiaoVienBoMon
AS
BEGIN
	UPDATE dbo.GIAOVIEN SET sMaBM = 'BM11' WHERE sChuyenNganh LIKE N'%Toán%'
END
EXEC dbo.PR_updateGiaoVienBoMon
SELECT * FROM dbo.GIAOVIEN
GO

--9 ,  PROC: output số lượng giáo viên nam và nữ . return tổng
CREATE PROC PR_tongGiaoVienNamNu
@nam INT  OUTPUT,
@nu INT  OUTPUT
AS
BEGIN
	SET @nam = 0
	SET @nu = 0
		SELECT @nam = COUNT(*) FROM dbo.GIAOVIEN WHERE sGioiTinh = N'Nam';
		SELECT @nu = COUNT(*) FROM dbo.GIAOVIEN WHERE sGioiTinh = N'nữ';
	RETURN  @nam + @nu -- tổng gv
END

DECLARE  @Tong INT, @men INT , @woman INT
EXECUTE dbo.PR_tongGiaoVienNamNu @nam = @men OUTPUT, 
                                 @nu = @woman OUTPUT  						
SET @Tong = @men+ @woman
SELECT @men AS [nam] ,
@woman AS [ nữ] , @Tong AS [tổng GV]
GO

-- 10 PROC: Tìm tuổi cao nhất của giáo viên
CREATE PROC PR_tuoiMaxGV
AS 
BEGIN 
	DECLARE @maxtuoi INT 
	SELECT @maxtuoi = MAX(YEAR(GETDATE()) - YEAR(dNgaySinh)) FROM dbo.GIAOVIEN
	RETURN @maxtuoi
END 

DECLARE @tuoicao INT 
EXEC @tuoicao = dbo.PR_tuoiMaxGV
SELECT @tuoicao AS [Tuổi cao nhất giáo viên]
GO

-- 11.PROC: tổng số công việc của đề tài với tên đề tài là tham số truyền vào
CREATE PROC PR_TongCongViecDeTai
@Tong INT OUTPUT ,
@tenDT NVARCHAR(50)
AS
BEGIN
	SELECT @Tong = COUNT(iSTT) FROM dbo.DETAI
	JOIN dbo.CONGVIEC
	ON CONGVIEC.sMaDT = DETAI.sMaDT
	WHERE @tenDT = sTenDT
END

DECLARE @TongCV INT;
EXECUTE dbo.PR_TongCongViecDeTai @Tong = @TongCV OUTPUT, -- int
                                 @tenDT = N'Nghiên cứu yếu tố điểm kém của sinh viên' 
SELECT @TongCV AS [Tổng Số Công Việc]
GO

-- 12,PROC: Hiện thông tin đề tài được thi công việc hay chưa
-- Tham số truyền vào tên đề tài
CREATE PROC PR_CVThucthi
@tenDT NVARCHAR(50)
AS
BEGIN
	IF EXISTS 
		(
			SELECT * FROM dbo.DETAI
			JOIN dbo.CONGVIEC
			ON CONGVIEC.sMaDT = DETAI.sMaDT
			WHERE @tenDT =sTenDT
		)
		BEGIN
			PRINT N'Đề tài đã được thực hiện'
		END

	ELSE
		BEGIN
			PRINT N'Đề tài chưa được thực hiện'
		END  
END
EXECUTE dbo.PR_CVThucthi @tenDT = N'Nghiên cứu yếu tố điểm kém của sinh viên' 
EXECUTE dbo.PR_CVThucthi @tenDT = N'NC, ĐG tình trạng nước thải tại khu vực thị xã' -- nvarchar(50)

GO

--13.PROC: Tình tuổi trung bình của giáo viên 1 khoa : tham số truyền vào là tên khoa
CREATE PROC PR_TuoiTBKhoa
@tenKh NVARCHAR(30)
AS
BEGIN
	SELECT AVG(YEAR(GETDATE())-YEAR(dNgaySinh)) AS [Tuổi Trung Bình] FROM dbo.GIAOVIEN
	JOIN dbo.BOMON
	ON BOMON.sMaBM = GIAOVIEN.sMaBM
	JOIN dbo.KHOA
	ON KHOA.sMaKH = BOMON.sMaKH
	WHERE @tenKh = sTenKH
END

EXECUTE dbo.PR_TuoiTBKhoa @tenKh = N'Kinh tế'
GO

-- 14,PROC: Tham số truyền vào : mã giáo viên
-- Hiên thông tin nếu giáo viên ấy và công việc đang thực hiện tham gia đề tài
CREATE PROC PR_GVandCVthuchien
@maGV VARCHAR(10)
AS
BEGIN
	IF EXISTS (SELECT * FROM dbo.THAMGIADETAI WHERE @maGV = sMaGV)
		BEGIN
			SELECT sTenGV,sTenCV FROM dbo.THAMGIADETAI
			JOIN dbo.CONGVIEC
			ON CONGVIEC.sMaDT = THAMGIADETAI.sMaDT AND CONGVIEC.iSTT = THAMGIADETAI.iSTT
			JOIN dbo.GIAOVIEN
			ON GIAOVIEN.sMaGV = THAMGIADETAI.sMaGV
			WHERE @maGV = GIAOVIEN.sMaGV
		END
	ELSE 
		BEGIN
			PRINT N'Giáo viên chưa tham gia vào đề tài nào'
		END
END
EXECUTE dbo.PR_GVandCVthuchien @maGV = 'GV15' 
EXECUTE dbo.PR_GVandCVthuchien @maGV = 'GV01' 
GO
-- 15.PROC: tìm tất cả giáo viên  thuộc khoa với tên khoa là tham số truyền vào
CREATE PROC PR_TongGVKhoa
 @SL INT OUTPUT,
 @tenkhoa NVARCHAR(50)
 AS
 BEGIN
	 SELECT @SL = COUNT(sMaGV) FROM dbo.GIAOVIEN WHERE sMaBM IN 
	 (
		SELECT sMaBM FROM dbo.BOMON INNER JOIN dbo.KHOA 
		ON KHOA.sMaKH = BOMON.sMaKH WHERE @tenkhoa = sTenKH
	 )
 END
DECLARE @SLGV INT;
EXECUTE dbo.PR_TongGVKhoa @SL = @SLGV OUTPUT, 
                          @tenkhoa = N'Công nghệ thông tin' 
SELECT @SLGV AS [Tổng số lượng giáo viên]
GO

-- 16 ,PROC: tìm tổng bộ môn thuộc khoa . với tên khoa là tham số truyền vào và tổng môn là output
CREATE PROC PR_tongBMkhoa
@tongmon INT OUTPUT,
@tenKH NVARCHAR(100)
AS 
BEGIN
	SELECT @tongmon = COUNT(sMaBM) FROM dbo.BOMON 
	INNER JOIN dbo.KHOA 
	ON KHOA.sMaKH = BOMON.sMaKH 
	WHERE @tenKH = sTenKH
END
-- gọi hàm
DECLARE @tongbomon INT;
EXECUTE dbo.PR_tongBMkhoa @tongmon = @tongbomon OUTPUT,
                          @tenKH = N'Công nghệ thông tin' 
SELECT @tongbomon AS [Tổng số lượng bộ môn]
GO

-- 17.PROC:  hiện tất cả tên công việc thuộc chủ đề  với tên chủ đề tham số truyền vào
CREATE PROC PR_TongCVChuDE
@tenCD NVARCHAR(30)
AS
BEGIN
	SELECT sTenCV FROM dbo.CONGVIEC  
	JOIN dbo.DETAI ON DETAI.sMaDT = CONGVIEC.sMaDT
	JOIN dbo.CHUDE
	ON CHUDE.sMaCD = DETAI.sMaCD 
	WHERE sTenCD = @tenCD
END
--gọi hàm
EXEC PR_TongCVChuDE @tenCD = N'Ứng dụng & Công nghệ'
GO

-- 18.PROC:  xóa đi 1 giáo viên  với mã gv và tuổi là tham số truyền vào
-- Với điều kiện tuổi GV > tuoi (VĐ: tuổi nghỉ hưu là 65 nếu không lớn hơn thì khum xóa)
CREATE PROC PR_XoaGV
@magv VARCHAR(10),
@tuoi INT 
AS 
BEGIN
	IF NOT EXISTS (SELECT * FROM dbo.GIAOVIEN WHERE @magv = sMaGV )
		BEGIN
			PRINT N'Mã giáo viên không tồn tại'
		END
	ELSE
		DELETE dbo.GIAOVIEN WHERE @tuoi <= (YEAR(GETDATE()) - YEAR(dNgaySinh) )
		AND  @magv =sMaGV
END
-- gọi hàm
EXECUTE dbo.PR_XoaGV @magv = 'GV16', 
                     @tuoi = 65  
GO

SELECT (YEAR(GETDATE()) - YEAR(dNgaySinh) ) AS [Tuổi giáo viên] FROM dbo.GIAOVIEN
GO

--19.PROC:  thêm hoặc xóa SDT giáo viên : tham số truyền vào mã giáo viên
-- update
CREATE PROC PR_UpdateSDTGV
@magv VARCHAR(10),
@SDT CHAR(12)
AS
BEGIN
	IF NOT EXISTS ( SELECT * FROM dbo.GIAOVIEN WHERE @magv = sMaGV)
		BEGIN
			PRINT N'Mã Giáo Viên không tồn tại'
		END
	ELSE
		UPDATE dbo.GIAOVIEN SET sSDT = @SDT WHERE @magv = sMaGV  
END

EXECUTE PR_UpdateSDTGV @magv = 'GV16', 
                         @SDT = '03286549456'  
SELECT * FROM dbo.GIAOVIEN
GO
-- 19.2 Xóa ( nghĩa là set số điện thoại giáo viên đó là NULL)
CREATE PROC PR_XoaSDTGV
@magv VARCHAR(10)
AS
BEGIN
	IF NOT EXISTS ( SELECT * FROM dbo.GIAOVIEN WHERE @magv = sMaGV)
		BEGIN
			PRINT N'Mã Giáo Viên không tồn tại'
		END
	ELSE
		UPDATE dbo.GIAOVIEN SET sSDT = NULL WHERE @magv = sMaGV  
END
EXECUTE dbo.PR_XoaSDTGV @magv = 'GV16' 

go


 -- 20,PROC:  đổi tên bộ môn ở bảng bộ môn với tên môn là tham số truyền vào
CREATE PROC PR_reNameMon
@tenmon NVARCHAR(30),
@tendoi NVARCHAR(30)
AS
BEGIN
	IF @tenmon IN (SELECT sTenBM FROM dbo.BOMON)
		BEGIN
			UPDATE dbo.BOMON SET sTenBM = @tendoi WHERE @tenmon = sTenBM
		END
	ELSE
		PRINT N'tên môn không có trong bảng !'
END
--gọi hàm
EXEC PR_reNameMon @tenmon = N'Toán tin' , @tendoi = N'Giải Tích 1'
SELECT * FROM dbo.BOMON


/* f. Tạo trigger*/
/*
Viết các Trigger cho phép kiểm soát ràng buộc dữ liệu, đồng bộ dữ liệu:
đơn giản, phức tạp, IF_UPDATE (ít nhất 10 trigger). Viết lệnh kích hoạt
các Trigger
*/

-- 1. Trigger: Thêm cột tổng giáo viên trong bảng khoa 
-- Mỗi lần thêm một giáo viên thì tổng số giáo viên khoa đó tự động tăng lên một

ALTER TABLE dbo.KHOA ADD TongSLGiaoVien INT 
SELECT * FROM dbo.KHOA

-- Lấy view Tổng số lượng giáo viên ở từng khoa đã tạo ở bảng view update tổng giáo viên
SELECT * FROM dbo.view_SoluonggiaovienKHoa
UPDATE dbo.KHOA SET TongSLGiaoVien = [Số lượng giáo viên] 
FROM dbo.view_SoluonggiaovienKHoa 
WHERE KHOA.sMaKH = view_SoluonggiaovienKHoa.sMaKH
GO

-- Tạo triiger
CREATE TRIGGER TG_TangTongGVKHOA
ON dbo.GIAOVIEN
FOR INSERT 
AS
BEGIN
	DECLARE @maKh VARCHAR(10)
	SELECT @maKh = KHOA.sMaKH FROM Inserted
	JOIN dbo.BOMON
	ON BOMON.sMaBM = Inserted.sMaBM
	JOIN dbo.KHOA
	ON KHOA.sMaKH = BOMON.sMaKH

	IF EXISTS (	SELECT * FROM Inserted
				JOIN dbo.BOMON
				ON BOMON.sMaBM = Inserted.sMaBM
				JOIN dbo.KHOA
				ON KHOA.sMaKH = BOMON.sMaKH
			  )
		BEGIN
			UPDATE dbo.KHOA SET TongSLGiaoVien = TongSLGiaoVien + 1
			WHERE sMaKH = @maKh
		END
	ELSE
		BEGIN
			PRINT N'Mã Bộ môn không tồn tại'
			ROLLBACK TRAN
		END

END

-- test
INSERT dbo.GIAOVIEN (sMaGV,sTenGV,dNgaySinh,sDiaChi,fLuong,sGioiTinh,sChuyenNganh,sMaBM)
VALUES (   'GV17',  N'Lý Văn Tính','19580306',  N'Quỳnh Lưu , Nghệ AN', 9000000, N'Nam',N'Anh văn 2',  'BM09'  )
GO
SELECT * FROM dbo.KHOA
GO

/* 2. Tạo trigger : xóa 1 giáo viên thì SoLuongGV ở bảng khoa sẽ giảm đi 1  */
CREATE TRIGGER TG_GiamTongGVKHOA
ON dbo.GIAOVIEN
AFTER DELETE
AS
BEGIN
	DECLARE @maKh VARCHAR(10)
	SELECT @maKh = KHOA.sMaKH FROM Deleted
	JOIN dbo.BOMON
	ON BOMON.sMaBM = Deleted.sMaBM
	JOIN dbo.KHOA
	ON KHOA.sMaKH = BOMON.sMaKH

	IF EXISTS (	SELECT * FROM Deleted
				JOIN dbo.BOMON
				ON BOMON.sMaBM = Deleted.sMaBM
				JOIN dbo.KHOA
				ON KHOA.sMaKH = BOMON.sMaKH
			  )
		BEGIN
			UPDATE dbo.KHOA SET TongSLGiaoVien = TongSLGiaoVien - 1
			WHERE sMaKH = @maKh
		END
	ELSE
		BEGIN
			PRINT N'Mã Bộ môn or mã khoa không tồn tại'
			ROLLBACK TRAN
		END
END
-- test
DELETE dbo.GIAOVIEN WHERE sMaGV = 'GV17'
SELECT * FROM dbo.KHOA
GO 

-- 3 Trigger : Thêm 1 giáo viên thì tổng số giáo viên dạy bộ môn đó sẽ tăng lên 1

-- Thêm cột tổng số lượng giáo viên ở bảng bộ môn

ALTER TABLE dbo.BOMON ADD iSoGVBoMon INT 
SELECT * FROM dbo.BOMON
SELECT * FROM dbo.view_SoluongTongluongBM

-- update tổng số lương giáo viên từ bảng view (Tổng số lượng bộ môn có sẵn )
UPDATE dbo.BOMON SET iSoGVBoMon = [Số lượng giáo viên]
FROM dbo.view_SoluongTongluongBM
WHERE BOMON.sMaBM = view_SoluongTongluongBM.sMaBM
GO

-- Trigger : 
CREATE TRIGGER TG_TangGvBoMon
ON dbo.GIAOVIEN
FOR INSERT , UPDATE
AS
BEGIN
	DECLARE @maBM VARCHAR(10)
	SELECT @maBM =Inserted.sMaBM FROM Inserted
	JOIN dbo.BOMON
	ON BOMON.sMaBM = Inserted.sMaBM

	IF NOT EXISTS (SELECT * FROM dbo.BOMON WHERE sMaBM = @maBM)
		BEGIN
			RAISERROR('Mã Bộ Môn không hợp lệ',16,1)
			ROLLBACK TRAN
		END
	ELSE
		BEGIN
			UPDATE dbo.BOMON SET iSoGVBoMon = iSoGVBoMon + 1 WHERE @maBM = sMaBM
		END
END
-- test
INSERT dbo.GIAOVIEN (sMaGV,sTenGV,dNgaySinh,sDiaChi,fLuong,sGioiTinh,sChuyenNganh,sMaBM)
VALUES (   'GV18',  N'Lý Văn Thanh','19490306',  N'Thanh Trì , Hà Nội', 9000000, N'Nam',N'Digital Marketing',  'BM06'  )
--(Nếu thêm thì tổng số giáo viên ở khoa cũng tăng : Ràng buộc trên trigeer 1 )
SELECT * FROM dbo.BOMON
GO

-- 4: TRiger : Xóa đi 1 giáo viên thì tổng số giáo viên ở BM giảm đi 1
CREATE TRIGGER TG_XoaGvBoMon
ON dbo.GIAOVIEN
FOR DELETE
AS
BEGIN
	DECLARE @maBM VARCHAR(10)
	SELECT @maBM =Deleted.sMaBM FROM Deleted
	JOIN dbo.BOMON
	ON BOMON.sMaBM = Deleted.sMaBM

	IF NOT EXISTS (SELECT * FROM dbo.BOMON WHERE sMaBM = @maBM)
		BEGIN
			RAISERROR('Mã Bộ Môn không hợp lệ',16,1)
			ROLLBACK TRAN
		END
	ELSE
		BEGIN
			UPDATE dbo.BOMON SET iSoGVBoMon = iSoGVBoMon - 1 WHERE @maBM = sMaBM
		END
END

-- test
DELETE dbo.GIAOVIEN WHERE sMaGV = 'GV18'
SELECT * FROM dbo.BOMON

-- 5. trigger: Khi thêm giáo viên đảm bảo lương giáo viên từ 5.000.000 đến 15.000.000
CREATE TRIGGER TG_LuongGiaoVien
ON dbo.GIAOVIEN
FOR INSERT , UPDATE
AS
BEGIN 
	DECLARE @Luong FLOAT
	SELECT @luong = fLuong FROM Inserted
	IF (@Luong < 5000000 or @Luong > 15000000)
		BEGIN
			PRINT N'Luong giáo viên chỉ nằm trong khoảng (5.000.000 - 15.000.000)'
			ROLLBACK TRAN
		END
END 
INSERT dbo.GIAOVIEN (sMaGV,sTenGV,dNgaySinh,sDiaChi,fLuong,sGioiTinh,sChuyenNganh,sMaBM)
VALUES (   'GV17',  N'Lý Văn Tính','19580306',  N'Quỳnh Lưu , Nghệ AN', 50, N'Nam',N'Anh văn 2',  'BM09'  )
GO

SELECT * FROM dbo.GIAOVIEN
GO

-- 6. trigger  : Nếu thêm 1 công việc thì tổng số công việc đó tăng lên
-- Thêm isoCV trong bảng đề tài
ALTER TABLE dbo.DETAI ADD isoCV INT 
-- Cập nhật dữ liệu cho isoCV
UPDATE dbo.DETAI SET isoCV = a.Tổng
FROM dbo.DETAI JOIN  ( 
					SELECT DETAI.sMaDT,COUNT(iSTT) AS [Tổng] FROM dbo.DETAI JOIN dbo.CONGVIEC
					ON CONGVIEC.sMaDT = DETAI.sMaDT
					GROUP BY DETAI.sMaDT
					 ) AS A ON A.sMaDT = DETAI.sMaDT

SELECT * FROM dbo.DETAI
SELECT * FROM dbo.CONGVIEC
GO

-- tạo trigger
ALTER TRIGGER TG_TangSLcongviec
ON dbo.CONGVIEC
FOR  INSERT
AS
BEGIN
	DECLARE @maDT VARCHAR(10)
	SELECT @maDT = Inserted.sMaDT FROM Inserted JOIN dbo.DETAI 
	ON DETAI.sMaDT = Inserted.sMaDT
	BEGIN
			UPDATE dbo.DETAI SET isoCV = isoCV + 1 WHERE sMaDT = @maDT
	END
	

END

INSERT INTO dbo.CONGVIEC(sMaDT,iSTT,sTenCV,dNgayBD,dNgayKT)
VALUES ('DT07',6, N'thu hoạch',   '20200603', '20200903' )
GO

SELECT * FROM dbo.CONGVIEC
SELECT * FROM dbo.DETAI
GO

-- 7 Trigger : Nếu xóa 1 công việc thì tổng số công việc đó giảm xg 1
CREATE TRIGGER TG_GiamSLcongviec
ON dbo.CONGVIEC
AFTER  DELETE
AS
BEGIN
	DECLARE @maDT VARCHAR(10)
	SELECT @maDT = Deleted.sMaDT FROM Deleted JOIN dbo.DETAI 
	ON DETAI.sMaDT = Deleted.sMaDT
	BEGIN
			UPDATE dbo.DETAI SET isoCV = isoCV - 1 WHERE sMaDT = @maDT
	END
END

DELETE dbo.CONGVIEC WHERE sMaDT = 'DT07' AND iSTT = 6
SELECT * FROM dbo.DETAI
GO

-- 8: Trigger : ngày kết thúc phải lớn hơn ngày bắt đầu đề tài
CREATE TRIGGER TG_CheckDay
ON dbo.CONGVIEC
AFTER INSERT , UPDATE
AS
BEGIN
	DECLARE @ngayBD DATE , @ngayKT DATE
	SELECT @ngayBD = Inserted.dNgayBD FROM Inserted
	SELECT @ngayKT =  Inserted.dNgayKT FROM Inserted
	
	IF (@ngayBD >= @ngayKT)
		BEGIN
			PRINT N'Ngày bắt đầu không thể lớn hơn ngày kết thúc'
			ROLLBACK TRAN
		END
END
-- kiểm tra
INSERT INTO dbo.CONGVIEC(sMaDT,iSTT,sTenCV,dNgayBD,dNgayKT)
VALUES ('DT07',6, N'thu hoạch',   '2020-06-03', '2020-04-03' )
GO

-- 9 : trigger: Không cho phép sửa mã giáo viên
CREATE TRIGGER TG_khongSuaMaGV
ON dbo.GIAOVIEN
FOR UPDATE
AS
BEGIN
	IF UPDATE(sMaGV)
	BEGIN
		PRINT N'Không thay đổi được mã giáo viên'
		ROLLBACK TRAN
	END
END
-- kiểm tra
UPDATE dbo.GIAOVIEN SET sMaGV = 'GV016' WHERE sMaGV = 'GV16'
SELECT * FROM dbo.GIAOVIEN
GO

-- 10: trigger : Giới hạn 9 đề tài nếu đến 9 đề tài không cho thêm dư liệu vào nữa
CREATE TRIGGER UTG_limitedDeTai
ON dbo.DETAI
FOR INSERT
AS 
BEGIN
	DECLARE @soDetai INT 
	SELECT @soDetai = COUNT(*) FROM dbo.DETAI

	IF @soDetai > 9
	BEGIN
		RAISERROR(N'Quá số đề tài cho phép',16,1)
		ROLLBACK TRANSACTION
	END
END
GO
-- test
INSERT dbo.DETAI (sMaDT,sTenDT, sCapQL, fKinhPhi, sGVCNDT, sMaCD)
VALUES (  'DT10',  N'Khai thác hợp lý nước sạch', N'Nhà nước', 900000, 'GV09',  'CD02'  )

SELECT * FROM dbo.DETAI
DELETE dbo.DETAI WHERE sMaDT ='DT10'
GO


-- 11 Trigger : nếu ngày kết thúc đề tài chưa kết thúc thì không được ghi kết quả vào bảng tham gia đề tài
CREATE TRIGGER TG_CheckKetQuaDeTai 
ON dbo.THAMGIADETAI
AFTER UPDATE, INSERT
AS
BEGIN
	IF UPDATE(sKetQua)
	BEGIN
		DECLARE @Datekt DATE,@kq NVARCHAR(30)
		SELECT @Datekt= dNgayKT FROM dbo.CONGVIEC INNER JOIN inserted 
		on dbo.CONGVIEC.sMaDT=inserted.sMaDT
		SELECT @kq= sKetQua FROM inserted
	IF(@Datekt >= GETDATE() AND @kq!=' ' OR @kq = 'NULL' )
		BEGIN
			PRINT N'Ngày kết thúc phải kết thúc mới có kết quả'
			ROLLBACK TRAN
		END
	END
END
GO 
--test trigger ( thành công )
INSERT INTO dbo.CONGVIEC
VALUES(  'DT01',  1,    N'khảo sát thị trường','20210202','20220202'  )

INSERT INTO dbo.THAMGIADETAI
VALUES( 'GV16', 'DT01',1, N'Đạt')

SELECT * FROM dbo.CONGVIEC
DELETE dbo.CONGVIEC WHERE sMaDT = 'DT01' AND iSTT = 1




